   Grammar : {
        "Pro → D ; I",
        "D → DL ; D",
        "DL → id : T | id : F",
        "T → char | int | bool | string",
        "F → function ( P ) : T | function ( ) : T",
        "I → IL ; I",
        "IL → if ( E ) { I } IFS | while ( E ) { I } | id = E | id = function ( Par ) { I } | id = function ( ) { I }",
        "IFS → else { I } | ɛ",
        "E → id ( P' ) | id ( ) | EL opari E | EL opbol E | EL oprel E | opuni E | ( E )",
        "EL → nb | id | str | litteral",
        "P → T | T , P",
        "P' → E | E , P'",
        "Par → id : T | id : T , Par",
   }

  Non Terminal:{
     ",",
     ";" ,
     ":" ,
     "char" ,
     "bool",
     "string",
     "int" ,
     "(" ,
     ")" ,
     "{",
     "}" ,
     "if" ,
     "else" ,
     "while" ,
     "function" ,
     "=" ,
     "nb" ,
     "id" ,
     "str" ,
     "litteral" ,
     "opari" ,
     "opbol" ,"oprel" ,
     "opuni"
  }